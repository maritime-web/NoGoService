version ''

project.ext.jsr305 = "3.0.0"
project.ext.jackson= "2.8.7"

subprojects {
    version ''
    apply plugin: 'java'
    apply plugin: 'findbugs'

    repositories {
        mavenCentral()
    }
    dependencies {

        compile 'com.google.guava:guava:19.0'
        compile 'org.projectlombok:lombok:1.16.14'
        compile "com.fasterxml.jackson.core:jackson-core:$jackson"
        compile "com.fasterxml.jackson.core:jackson-databind:$jackson"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson"
        compileOnly "com.google.code.findbugs:jsr305:$jsr305"
        compileOnly "com.google.code.findbugs:annotations:$jsr305"
        testCompileOnly "com.google.code.findbugs:jsr305:$jsr305"
        testCompileOnly "com.google.code.findbugs:annotations:$jsr305"

    }

    // fail the build if there are two versions of the same jar file
    configurations.all({
        resolutionStrategy {
            failOnVersionConflict()

            force(
            )
        }
    })

    jar {
        doFirst {
            manifest {
                attributes("build-version": "$System.env.BUILD_NUMBER")
            }
        }
    }

    def onJenkins = System.getenv().get('BUILD_NUMBER') != null

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = onJenkins
            html.enabled = !onJenkins
        }
        ignoreFailures = onJenkins
    }

    tasks.withType(Test) {
        afterTest { desc, result ->
            println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
        }
    }

}


// task that can be used to test out groovy expressions
task debug {
    outputs.upToDateWhen { false }
}


